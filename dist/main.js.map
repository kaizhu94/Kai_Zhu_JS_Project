{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/puzzle.js","webpack:///./src/scripts/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Puzzle","convas","player","start","setGameOver","this","puzzle","context","getContext","puzzleWidth","padding","column","imageWidth","emptyPosition","imageIndex","setupRandomPosition","correctIndex","gameOver","gameStart","addEventListener","e","x","parseInt","offsetX","position","offsetY","target","moveImageIfCanAtPosition","refreshImagePositions","checkIfFinished","drawPiece","meme","lastIndex","preventDefault","printWinner","document","rightOfPosition","bottomOfPosition","leftOfPosition","topOfPosition","move","Audio","volume","play","getElementById","classList","add","remove","index","img","Image","src","String","onload","rect","rectForPosition","drawImage","moveSound","canvas","imageIndexForPosition","Math","random","length","times","direction","top","left","bottom","right","targetPositioin","isPositionEmpty","origin","originRect","clearRect","width","height","drawAllImage","removeWinner","MemeGame","player1Board","player2Board","player1","player2","cavas1","cavas2","playing","reset","gameFinished","alert","backgroundMusic","isMusicOn","playMusic","removeEventListener","pause","game","intro","getElementsByClassName","window","console","log","currentTarget"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\nexport default class Puzzle{\n\n    constructor(convas, player, start, setGameOver){\n        this.player = player;\n        this.puzzle = convas;\n        this.context = convas.getContext(\"2d\");\n        this.puzzleWidth = 300;\n        this.padding = 2;\n        this.column = 3;\n        this.imageWidth = (this.puzzleWidth - (this.padding * (this.column + 1))) / this.column;\n    \n        this.emptyPosition = 0;\n        this.imageIndex = this.setupRandomPosition(this.puzzle)\n        this.correctIndex=[0,1,2,3,4,5,6,7,8]\n\n        this.gameOver = false;\n        this.setGameOver = setGameOver;\n        this.gameStart = start || false;\n\n        \n\n        this.puzzle.addEventListener('mousedown', (e)=>{\n            if (this.gameOver) {\n                return;\n            }\n            let x = parseInt(e.offsetX / (this.padding + this.imageWidth));\n            let y = parseInt(e.offsetY / (this.padding + this.imageWidth));\n\n            let position = y * this.column + x;\n            let target = this.moveImageIfCanAtPosition(this.imageIndex, this.puzzle, position);\n            \n            if (target >= 0){\n                this.refreshImagePositions(this.context, this.imageIndex, position, target);\n            }\n            if (this.checkIfFinished(this.imageIndex)) {\n                this.drawPiece(this.meme ,this.imageIndex[this.lastIndex()], this.lastIndex());\n                this.gameOver = true;\n                this.setGameOver();\n\n                e.preventDefault();\n                this.printWinner();\n            }\n        });\n\n        document.addEventListener('keydown', (e)=>{      \n            let position = -1;\n            if(this.player === 2){\n                if (e.key== 'ArrowLeft') {  // left\n                    position = this.rightOfPosition(this.puzzle.emptyPosition);\n                } else if (e.key == 'ArrowUp') { // up\n                    position = this.bottomOfPosition(this.puzzle.emptyPosition);\n                } else if (e.key == 'ArrowRight') { //right\n                    position = this.leftOfPosition(this.puzzle.emptyPosition);\n                } else if (e.key == 'ArrowDown') { // down\n                    position = this.topOfPosition(this.puzzle.emptyPosition);\n                }\n            } else{\n                if (e.key == 'a') { // A\n                position = this.rightOfPosition(this.puzzle.emptyPosition);\n            } else if (e.key == 'w') { // W\n                position = this.bottomOfPosition(this.puzzle.emptyPosition);\n            } else if (e.key == 'd') { // D\n                position = this.leftOfPosition(this.puzzle.emptyPosition);\n            } else if (e.key == 's') { // S\n                position = this.topOfPosition(this.puzzle.emptyPosition);\n            }\n            }\n            if (this.gameOver) {\n                return;\n            }\n            if (position < 0 || position > this.lastIndex()) {\n                return;\n            } \n            let target = this.moveImageIfCanAtPosition(this.imageIndex, this.puzzle, position);\n            if (target >= 0) {\n                this.refreshImagePositions(this.context, this.imageIndex, position, target);\n            }\n        });\n        \n        document.addEventListener('keyup', (e)=>{\n            \n            if (this.checkIfFinished(this.imageIndex)) {\n                this.drawPiece(this.meme ,this.imageIndex[this.lastIndex()], this.lastIndex());\n                this.gameOver = true;\n                this.setGameOver();\n                \n                e.preventDefault();\n                this.printWinner();\n            }\n        })\n        \n    }\n    moveSound(){\n        const move = new Audio(\"https://raw.githubusercontent.com/kaizhu94/Kai_Zhu_JS_Project/gh_pages/dist/sound/done.mp3\");\n        move.volume = 0.2;\n        move.play();\n    }\n\n\n    printWinner(){\n        if(this.player == 1){\n            const wM = document.getElementById(\"winner_message_1\");\n            wM.classList.add('show')\n        }else{\n            const wM = document.getElementById(\"winner_message_2\");\n            wM.classList.add('show')\n        }\n    }\n\n    removeWinner(){\n        if(this.player == 1){\n            const wM = document.getElementById(\"winner_message_1\");\n            wM.classList.remove('show')\n        }else{\n            const wM = document.getElementById(\"winner_message_2\");\n            wM.classList.remove('show')\n        }\n    }\n\n    gameFinished(){\n        this.gameOver = true;\n    }\n    // return the last index\n    lastIndex() {\n        return this.column * this.column - 1;\n    }\n\n    // recalculate the starting point of drawing an image\n    rectForPosition(position) {\n        if (position < 0 || position > this.lastIndex()) {\n            return [0, 0, 0, 0];\n        }\n        let x = (position % this.column) * (this.padding + this.imageWidth) + this.padding;\n        let y = parseInt(position / this.column) * (this.padding + this.imageWidth) + this.padding;\n        \n        return [x, y, this.imageWidth, this.imageWidth];\n    }\n\n    // drawing a single piece of puzzle\n    drawPiece(meme, index, position) {\n        \n        this.meme = meme;\n\n        let img = new Image();\n        img.src = `https://raw.githubusercontent.com/kaizhu94/Kai_Zhu_JS_Project/gh_pages/dist/images/${meme}` + String(index+1) + '.jpg';\n        // https://raw.githubusercontent.com/kaizhu94/Kai_Zhu_JS_Project/gh_pages/dist/images/whyAA_1.jpg\n        img.onload = () => {\n            let rect = this.rectForPosition(position);\n            this.context.drawImage(img, rect[0], rect[1], rect[2], rect[3]);\n            this.moveSound();\n        }\n    }\n\n    // draw whole puzzle, skip the last one.\n    drawAllImage(meme){\n        for (let position = 0; position < this.column * this.column; position++) {\n            let index = this.imageIndex[position];\n            if (index === this.lastIndex()) {\n                continue;\n            }\n            \n            this.drawPiece(meme,index, position);\n        }\n    }\n\n    //gives a randon position array\n    setupRandomPosition(canvas) {\n        let list1 = [4, 3, 2, 8, 0, 7, 5, 6, 1];\n        let list2 = [2, 0, 5, 6, 8, 7, 3, 1, 4];\n        let list3 = [3, 7, 2, 4, 1, 6, 8, 0, 5];\n        let list4 = [3, 2, 4, 1, 7, 6, 5, 0, 8];\n        let lists = [list1, list2, list3, list4];\n    \n        let imageIndexForPosition = lists[parseInt(Math.random() * 4)];\n    \n        \n        for (let i = imageIndexForPosition.length - 1; i >= 0; i--) {\n            if (imageIndexForPosition[i] == this.lastIndex()) {\n                this.emptyPosition = i;\n                break;\n            }\n        }\n        canvas.emptyPosition = this.emptyPosition;\n        \n        //double check this index is valid. \n        let times = 15;\n        while (times--) {\n            \n            let direction = parseInt(Math.random() * 4);\n    \n            let target = -1;\n            if (direction == 0) {\n                target = this.topOfPosition(this.emptyPosition); \n            } else if (direction == 1) {\n                target = this.leftOfPosition(this.emptyPosition); \n            } else if (direction == 2) {\n                target = this.rightOfPosition(this.emptyPosition);  \n            } else if (direction == 3) {\n                target = this.bottomOfPosition(this.emptyPosition);  \n            }\n            if (target < 0 || target > this.lastIndex()) {  \n                continue;\n            }\n            \n            let result = this.moveImageIfCanAtPosition(imageIndexForPosition, canvas, target);\n            if (result >= 0) { \n                this.emptyPosition = target;\n            }\n        }\n    \n        return imageIndexForPosition;\n    }\n\n    // return true if that positon is empty\n    isPositionEmpty (imageIndexForPosition, position) {\n        \n        if (position < 0 || position > this.lastIndex()) {\n            return false;\n        } \n        if (imageIndexForPosition[position] === this.lastIndex()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    //test which direct is possible to move\n    moveImageIfCanAtPosition(imageIndexForPosition, canvas, position) {\n        let top = this.topOfPosition(position);\n        let left = this.leftOfPosition(position);\n        let bottom = this.bottomOfPosition(position);\n        let right = this.rightOfPosition(position);\n        \n        let targetPositioin = -1; \n        if (this.isPositionEmpty(imageIndexForPosition, top)) {\n            targetPositioin = top;\n        } else if (this.isPositionEmpty(imageIndexForPosition, left)) {\n            targetPositioin = left;\n        } else if (this.isPositionEmpty(imageIndexForPosition, bottom)) {\n            targetPositioin = bottom;\n        } else if (this.isPositionEmpty(imageIndexForPosition, right)) {\n            targetPositioin = right;\n        }\n    \n        if (targetPositioin >= 0) {\n            imageIndexForPosition[targetPositioin] = imageIndexForPosition[position];\n            imageIndexForPosition[position] = this.lastIndex();\n            canvas.emptyPosition = position; \n            return targetPositioin;\n        }\n        return -1;\n    }\n\n    //clear image on the old position, and draw new image on new position\n    refreshImagePositions(context, imageIndexForPosition, origin, target) {\n        let originRect = this.rectForPosition(origin);\n    \n        context.clearRect(originRect[0], originRect[1], originRect[2], originRect[3]);\n\n        this.drawPiece(this.meme, imageIndexForPosition[target], target);\n    }\n\n    checkIfFinished(imageIndex) {\n        for (let index = 0; index < imageIndex.length; index++) {\n            if (imageIndex[index] !== this.correctIndex[index]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    reset(meme){\n        if(this.gameStart){\n            this.context.clearRect(0, 0, this.puzzle.width, this.puzzle.height);\n            this.imageIndex = this.setupRandomPosition(this.puzzle);\n            this.drawAllImage(meme)\n            this.gameOver = false\n            this.removeWinner();\n        }\n    }\n\n    //return true if it is valid to move left\n    leftOfPosition(position) {\n        return (position % this.column) === 0 ? -1 : position - 1;\n    }\n\n    //return true if it is valid to move right\n    rightOfPosition(position) {\n        return (position % this.column) === (this.column - 1) ? -1 : position + 1;\n    }\n\n   //return true if it is valid to move top\n    topOfPosition(position) {\n        return position - this.column;\n    }\n\n  //return true if it is valid to move down\n    bottomOfPosition(position) {\n        return position + this.column;\n    }\n\n}","import Puzzle from './puzzle';\n\nexport default class MemeGame{\n    constructor(player1Board, player2Board){\n        this.player1 = 1;\n        this.player2 = 2;\n        this.cavas1 = player1Board;\n        this.cavas2= player2Board;\n\n        \n\n        this.playing = false;\n        this.setGameOver = this.setGameOver.bind(this);\n        this.start = this.start.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n    \n    setGameOver(){\n        this.player1Board.gameFinished();\n        this.player2Board.gameFinished();\n    }\n\n    start(meme){\n        this.playing = true;\n         \n        this.player1Board = new Puzzle(this.cavas1, this.player1, this.playing, this.setGameOver);\n        this.player2Board = new Puzzle(this.cavas2, this.player2, this.playing, this.setGameOver);\n        this.player1Board.drawAllImage(meme);\n        this.player2Board.drawAllImage(meme);\n    }\n\n    reset(meme){\n\n        if(this.player1Board && this.player2Board){\n            this.player1Board.reset(meme);\n            this.player2Board.reset(meme);\n        }else{\n            alert(\"You can't reset an empty game!\")\n        }\n    }\n}","import \"./styles/index.scss\";\nimport MemeGame from './scripts/game'\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const backgroundMusic = document.getElementById('background_music')\n    let isMusicOn = false;\n    function playMusic(){\n        backgroundMusic.play();\n        isMusicOn = true;\n        document.removeEventListener('keypress', playMusic)\n    }\n\n    document.addEventListener('keypress', playMusic)\n\n    const pauseMusic = document.getElementById('pause');\n\n    pauseMusic.addEventListener('click', (e)=>{\n        e.preventDefault();\n        if(isMusicOn){\n            backgroundMusic.pause();\n            isMusicOn = false;\n        }else{\n            backgroundMusic.play();\n            isMusicOn = true;\n        }\n    })\n\n    \n    const player1Board = document.getElementById('player1Board');\n    const player2Board = document.getElementById('player2Board');\n    \n    const game = new MemeGame(player1Board, player2Board)\n    \n    const classes = document.getElementsByClassName('intro');\n    const intro = classes[0]\n    window.addEventListener('click', (e)=>{\n        intro.classList.add('off');\n    })\n\n\n    const xButton = document.getElementById('xButton');\n    xButton.addEventListener('click', (e)=>{\n        intro.classList.add('off');\n    })\n\n    \n    let meme = '';\n    let selector = document.getElementById('images-selector')\n    selector.addEventListener('click', e=>{\n        // e.preventDefault();\n        console.log(\"before select, meme is : \"+ meme)\n        meme = e.currentTarget.value\n        console.log(\"after select, meme is : \"+ meme)\n    })\n\n    const start = document.getElementById('start');\n    start.addEventListener('click', e=>{\n        e.preventDefault();\n        if(meme.length !== 0){\n            if(game.playing){\n                alert(\"You have a game runing, use reset for a new puzzle.\")\n            }else{\n                console.log(\"before start game, meme is : \"+ meme)\n                game.start(meme);\n            }\n        }else{\n            alert(\"Pick your favorite meme\")\n        }\n    })\n\n    const reset = document.getElementById('reset');\n    reset.addEventListener('click', e=>{\n        // e.preventDefault();\n        if(meme.length !== 0){\n            console.log(\"before reset game, meme is : \"+ meme)\n            game.reset(meme);\n        }else{\n            alert(\"You can't reset before start a game!\")\n        }\n    })\n\n    \n    \n});"],"sourceRoot":""}